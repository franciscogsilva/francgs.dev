---
import type { MarkdownInstance } from "astro";
import BlogPost from "../../components/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

const allPosts = await Astro.glob("../blog/*.md");

const tags: Array<string> = [
  ...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat()),
];

export async function getStaticPaths() {
  const allPosts = await Astro.glob("../blog/*.md");

  const tags: Array<string> = [
    ...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat()),
  ];

  console.log(tags);

  return tags.map((tag: string) => {
    const filteredPosts: MarkdownInstance<Record<string, any>>[] =
      allPosts.filter((post: any) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props as Record<string, any>;

const description = '';
---

<BaseLayout title=`Tag - ${tag}` description={description}>
  <div class="pb-6 pt-6">
    <h1
      class="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:hidden sm:text-4xl sm:leading-10 md:text-6xl md:leading-14"
    >
      {tag}
    </h1>
    <div class="flex sm:space-x-24">
      <div
        class="hidden h-full max-h-screen min-w-[280px] max-w-[280px] flex-wrap overflow-auto rounded bg-gray-50 pt-5 shadow-md dark:bg-gray-900/70 dark:shadow-gray-800/40 sm:flex"
      >
        <div class="px-6 py-4">
          <a
            class="font-bold uppercase text-gray-700 hover:text-primary-500 dark:text-gray-300 dark:hover:text-primary-500"
            href="/blog"
            >All Posts
          </a>
          <ul>
            {
              tags.map((currentTag: string) => (
                <>
                  <li class="my-3">
                    {tag == currentTag ? (
                      <h3 class="inline px-3 py-2 text-sm font-bold uppercase text-primary-500">
                        {currentTag} (
                        {
                          allPosts.filter((post) =>
                            post.frontmatter.tags?.includes(currentTag)
                          ).length
                        }
                        )
                      </h3>
                    ) : (
                      <a
                        class="px-3 py-2 text-sm font-medium uppercase text-gray-500 hover:text-primary-500 dark:text-gray-300 dark:hover:text-primary-500"
                        aria-label=`View posts tagged ${currentTag}`
                        href=`/tags/${currentTag}`
                      >
                        {currentTag} (
                        {
                          allPosts.filter((post) =>
                            post.frontmatter.tags?.includes(currentTag)
                          ).length
                        }
                        )
                      </a>
                    )}
                  </li>
                </>
              ))
            }
          </ul>
        </div>
      </div>

      <div class="flex sm:space-x-24">
        <div>
          <ul>
            {
              posts.map((post: any) => (
                <BlogPost
                  pubDate={post.frontmatter.pubDate}
                  url={post.url}
                  title={post.frontmatter.title}
                  tags={post.frontmatter.tags}
                  description={post.frontmatter.description}
                />
              ))
            }
          </ul>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>
